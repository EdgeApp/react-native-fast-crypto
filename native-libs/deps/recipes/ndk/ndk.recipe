# This recipe contains the setup tasks for unpacking and installing the NDK
inherit common

version="28.0.12674087"

# Install NDK using sdkmanager if not present, otherwise use system NDK
unzip_ndk() {
    echo "Setting up NDK $version..."
    
    # Check if NDK exists
    if [ ! -d "$ANDROID_HOME/ndk/$version" ]; then
        echo "NDK $version not found. Attempting to install via sdkmanager..."
        
        # Try to install using sdkmanager
        if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "Installing NDK $version via sdkmanager..."
            "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "ndk;$version"
        else
            echo "Warning: sdkmanager not found. Please install NDK $version manually."
            echo "Run: \$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \"ndk;$version\""
            exit 1
        fi
    fi
    
    echo "Using NDK $version from $ANDROID_HOME/ndk/$version"
    # Create symlink to NDK
    ln -sf "$ANDROID_HOME/ndk/$version" "$work_dir/android-ndk-$version"
}
task unzip-ndk

# NDK 28.0 uses integrated toolchains, no standalone needed
# $1 arch name for creating the symlink.
setup() {
    echo Setting up NDK 28.0 integrated toolchain for $1...
    
    # Create symlink to main NDK toolchain (NDK 28 doesn't need standalone)
    ln -sf "$work_dir/android-ndk-$version/toolchains/llvm/prebuilt/darwin-x86_64" "$work_dir/$1"
    
    echo NDK 28.0 toolchain ready for $1
}
setup_arm() {
    setup arm
}
setup_arm64() {
    setup arm64
}
setup_x86() {
    setup x86
}
setup_x86_64() {
    setup x86_64
}
task setup-arm unzip-ndk
task setup-arm64 unzip-ndk
task setup-x86 unzip-ndk
task setup-x86_64 unzip-ndk
default=setup-arm
